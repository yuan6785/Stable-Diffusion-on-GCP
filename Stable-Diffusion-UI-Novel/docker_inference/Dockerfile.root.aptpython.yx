FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

# apt install -y wget git python3 python3-venv python3-pip xdg-utils && \
RUN set -ex && \
    apt update && \
    apt install -y wget git python3 python3-venv python3-pip && \
    rm -rf /var/lib/apt/lists/*
# 查看显卡驱动
RUN nvidia-smi

# 配置环境变量
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda/lib64
RUN ln -s /usr/local/cuda/lib64/libcudart.so.11.0 /usr/local/cuda/lib64/libcudart.so

# 开始安装sd
# 使用 --skip-torch-cuda-test, 因为cloudbuild.yaml的machineType是没有GPU的； 另一种思路，取消这个参数，但是cloudbuild.yaml的machineType改成有GPU的也可以尝试下；
WORKDIR /root
RUN ls -l /root
RUN set -ex \
    && git clone https://github.com/yuan6785/stable-diffusion-webui.git && cd stable-diffusion-webui && git checkout b791502f18b0de3e9eb93fca3aadce42878904d8 \
    &&  python3 launch_gcp.py --skip-torch-cuda-test  \
    && git clone https://github.com/Mikubill/sd-webui-controlnet.git extensions/sd-webui-controlnet

# Install TensorRT and set cuda env, 这一步其实可以不要，但按原作者的思想，加进去吧
RUN set -ex \
    && python3 -m pip install -y tensorrt==8.6.0
ARG CUDNN_PATH=$(dirname $(python3 -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)"))
ARG TENSORRT_PATH=$(dirname $(python3 -c "import tensorrt;print(tensorrt.__file__)"))
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda/lib64:$CUDNN_PATH:$TENSORRT_PATH
#
EXPOSE 7860

WORKDIR /root/stable-diffusion-webui/
CMD ["python3", "launch.py", "--listen", "--xformers",  "--medvram"]