
# /home/miniconda3/envs/sd_python310/bin/python -m pip install virtualenv 或者 /home/miniconda3/bin/conda install -n sd_python310 virtualenv
# && /home/miniconda3/envs/sd_python310/bin/python  launch_gcp.py --skip-torch-cuda-test  \ 原来用这个，后来改为python -c的方式
# 使用 --skip-torch-cuda-test, 因为cloudbuild.yaml的machineType是没有GPU的； 另一种思路，取消这个参数，但是cloudbuild.yaml的machineType改成有GPU的也可以尝试下；----可以用打好的镜像创建一个ubuntu的pod参考deployment_ubuntu_sd_test.yaml进行调试
# 独立部署时， 如果出现安装gfpgan报错，可以先尝试安装/home/miniconda3/envs/sd_python310/bin/python -m pip install cython==0.29.34
#
# AddNet如何报错，可能是lora的的模型不完整，删除不完整的lora即可----重要
# 
# 安装Auto-Photoshop-StableDiffusion-Plugin插件
# git clone https://github.com/AbdullahAlfaraj/Auto-Photoshop-StableDiffusion-Plugin
# cd Auto-Photoshop-StableDiffusion-Plugin
# git checkout 745d541a6298ce58ea8a135349978c864106836d
# pip install -r requirements.txt  # 可以不执行，启动sdwebui会自动执行
# 修改
# /Users/yuanxiao/workspace/0yxgithub/Auto-Photoshop-StableDiffusion-Plugin/install.py
# auto_update=False # 否则会自动更新
#
# 成功版本记录: 
# https://github.com/yuan6785/stable-diffusion-webui.git
# 上一个成功版本 ： branch:20230515 submit:   b791502f18b0de3e9eb93fca3aadce42878904d8
# 目前版本:  branch:master   submit:  e4cd0e1abc89713d7c1ac7f1f37ea8359c49d7ec
#
#
RUN set -ex \
    && bash Miniconda3-py38_23.1.0-1-Linux-x86_64.sh -b -p /home/miniconda3 \
    && /home/miniconda3/bin/conda init \
    && /home/miniconda3/bin/conda create -y --name sd_python310 python=3.10 \
    && /home/miniconda3/bin/conda install -y -n sd_python310 virtualenv \
    && git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui \
    && cd stable-diffusion-webui \
    && git checkout -b develop f865d3e11647dfd6c7b2cdf90dde24680e58acd8 \
    && /home/miniconda3/envs/sd_python310/bin/python -c "import launch;launch.prepare_environment();" --skip-torch-cuda-test \
    && cd extensions \
    && git clone https://github.com/Mikubill/sd-webui-controlnet.git && cd sd-webui-controlnet && git checkout -b develop 07bed6ccf8a468a45b2833cfdadc749927cbd575 && cd .. \
    && git clone https://github.com/KohakuBlueleaf/a1111-sd-webui-locon.git && cd a1111-sd-webui-locon && git checkout -b develop  b6911354f7641c49296b37a2b939c3c472624abc && cd .. \
    && git clone https://github.com/DominikDoom/a1111-sd-webui-tagcomplete.git && cd a1111-sd-webui-tagcomplete && git checkout -b develop 2.6.0 && cd .. \
    && git clone https://github.com/fkunn1326/openpose-editor && cd openpose-editor && git checkout -b develop  722bca6fb9b062815d13b950e7040589abaec797 && cd .. \
    && git clone https://github.com/hnmr293/posex && cd posex && git checkout -b develop 07f2585bad215a6d70582012d03eb29fd0133fb2 && cd .. \
    && git clone https://github.com/kohya-ss/sd-webui-additional-networks && cd sd-webui-additional-networks && git checkout -b develop v0.5.0 && cd .. \
    && git clone https://github.com/jexom/sd-webui-depth-lib.git && cd sd-webui-depth-lib && git checkout -b develop  efa9f616b30ea0f27e5dadf40ab41815012d1d78 && cd .. \
    && git clone https://github.com/Coyote-A/ultimate-upscale-for-automatic1111.git && cd ultimate-upscale-for-automatic1111 && git checkout -b develop c99f382b31509b87b4d512e70e9caf08ae7a079f && cd .. 



重要步骤: 原版调试--------------------------
调试: 先到原来的版本调试生产必要的目录(models下的目录比如GFPGAN等)和安装对应版本的xformers
cd /mnt/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui-20230713/stable-diffusion-webui
/mnt/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310_20230713/bin/python  launch.py  --listen --port 9965  --xformers  --medvram




模拟云函数环境进行调试--------------------------
另外一种调试方法(带GPU的)--------复制到home目录模拟云函数环境进行调试---------
我的调试镜像打包好的:  sdwebui-aliynfunc-nas-debug（含GPU的）。
实例启动模板: sdwebui-aliynfunc-nas-debug （用上面的镜像和相关机型的，直接用即可）--------
--------------到带gpu的服务器执行下面命令（pip install tensorrt==8.6.0）----------------

/bin/sh -c 'echo ---------start-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
echo ---------start set env-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
CUDNN_PATH=$(dirname $(/mnt/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310_20230713/bin/python -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)")) && \
TENSORRT_PATH=$(dirname $(/mnt/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310_20230713/bin/python -c "import tensorrt;print(tensorrt.__file__)")) && \
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:$CUDNN_PATH:$TENSORRT_PATH && \
echo ---------start rsync-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
if [ ! -d "/home/stable-diffusion-webui/modules" ]; then rsync -azP --no-perms --no-owner --no-group --exclude "/models" --exclude "/embeddings" --exclude "/scripts" --exclude "/samples" --exclude "/localizations" --exclude "/outputs"  /mnt/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui-20230713/stable-diffusion-webui/ /home/stable-diffusion-webui; fi && \
echo ---------start ln base-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
if [ ! -d "/home/stable-diffusion-webui/models" ]; then mkdir /home/stable-diffusion-webui/models; fi && \
for dir in Codeformer deepbooru ESRGAN GFPGAN  karlo LDSR SwinIR VAE-approx; do if [ ! -L "/home/stable-diffusion-webui/models/$dir" ]; then ln -s /mnt/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui-20230713/stable-diffusion-webui/models/$dir  /home/stable-diffusion-webui/models/; fi; done && \
for dir in ControlNet  hypernetworks  Lora  Stable-diffusion  VAE; do if [ ! -L "/home/stable-diffusion-webui/models/$dir" ]; then ln -s /mnt/sdwebui_public/public/models/$dir  /home/stable-diffusion-webui/models/; fi; done && \
for dir in embeddings  localizations  outputs  samples  scripts; do if [ ! -L "/home/stable-diffusion-webui/$dir" ]; then ln -s /mnt/sdwebui_public/public/$dir  /home/stable-diffusion-webui/; fi; done && \
echo ---------start ln additional networks-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
rm -rf /home/stable-diffusion-webui/extensions/sd-webui-additional-networks/models/lora/* && \
ln -s /mnt/sdwebui_public/public/models/Lora  /home/stable-diffusion-webui/extensions/sd-webui-additional-networks/models/lora/
'

启动(可以在home目录下自行调试，不影响云函数的运行)---
cd /home/stable-diffusion-webui
/mnt/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310_20230713/bin/python  launch.py  --listen --port 9965  --xformers  --medvram 

调试完成后: 删除/home/stable-diffusion-webui即可