# 这个dockerfile的阿里云函数版本的内存需要24个G----阿里云对# CMD ./start.sh启动多个服务的支持不太好，所以放弃这种, 这种还需要登录一次云函数实例,进到镜像里面，才能启动起来启动命令
# 后面使用 cmd一条命令的方式即可
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

RUN set -ex && \
    apt update && \
    apt install -y wget git rsync libglib2.0-dev libcairo2-dev libgl1-mesa-glx supervisor nginx && \
    rm -rf /var/lib/apt/lists/*

ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda/lib64
RUN ln -s /usr/local/cuda/lib64/libcudart.so.11.0 /usr/local/cuda/lib64/libcudart.so

# /share是李波挂载到nfs的目录，需要和李波确认
#
ARG CUDNN_PATH=$(dirname $(/share/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310/bin/python -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)"))
ARG TENSORRT_PATH=$(dirname $(/share/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310/bin/python -c "import tensorrt;print(tensorrt.__file__)"))
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda/lib64:$CUDNN_PATH:$TENSORRT_PATH
#
# WORKDIR /home
# RUN rsync -azP --no-perms --no-owner --no-group --exclude '/models' --exclude '/embeddings' --exclude '/scripts' --exclude '/samples' --exclude '/localizations' --exclude '/outputs'  /share/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui/ /home/stable-diffusion-webui
# RUN chmod -Rf 777 /home/stable-diffusion-webui
# RUN ln -s /share/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui/models  /home/stable-diffusion-webui/ && \
#     ln -s /share/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui/embeddings  /home/stable-diffusion-webui/ && \
#     ln -s /share/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui/scripts  /home/stable-diffusion-webui/ && \
#     ln -s /share/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui/samples  /home/stable-diffusion-webui/ && \
#     ln -s /share/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui/localizations  /home/stable-diffusion-webui/ && \
#     ln -s /share/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui/outputs  /home/stable-diffusion-webui/
#
# COPY docker_data/supervisord3.conf /etc/supervisord.conf
COPY docker_data/nginx3.conf /etc/nginx/conf.d/default.conf
COPY docker_data/fastapi_main.py /home/fastapi_main.py
# COPY docker_data/start.sh /home/start.sh
# RUN chmod +x /home/start.sh
ENV PYTHONUNBUFFERED true
ENV PROJECT_ENV prod
#
EXPOSE 7860

WORKDIR /home/stable-diffusion-webui
# --ui-settings-file /home/stable-diffusion-webui/config.json
# CMD ./start.sh  # 阿里云函数不支持这种写法
# CMD ["sh", "-c", "/home/start.sh"]  # 阿里云不支持这种写法
# 阿里云函数---支持写在一条命令的写法---但是支持也不太好，sdwebui总启动不起来,有时候又能启动起来,卡在各种位置，感觉是阿里云函数的问题
# CMD /bin/sh -c "echo PYTHONUNBUFFERED=$PYTHONUNBUFFERED;echo PROJECT_ENV=$PROJECT_ENV;echo 'yx test 1111'>/var/log/sdwebui.log;/usr/bin/supervisord -c /etc/supervisord.conf;/usr/sbin/nginx -c /etc/nginx/nginx.conf;sleep 1 && tail -f /var/log/sdwebui.log;sleep 864000"
# CMD /bin/sh -c "echo PYTHONUNBUFFERED=$PYTHONUNBUFFERED;echo PROJECT_ENV=$PROJECT_ENV;echo 'yx test 1111'>/var/log/sdwebui.log;/usr/bin/supervisord -c /etc/supervisord.conf;sleep 1  && /usr/sbin/nginx -c /etc/nginx/nginx.conf -g 'daemon off;';"
# CMD /bin/sh -c "echo PYTHONUNBUFFERED=$PYTHONUNBUFFERED;echo PROJECT_ENV=$PROJECT_ENV;echo 'yx test 1111'>/var/log/sdwebui.log;/usr/bin/supervisord -c /etc/supervisord.conf;sleep 1 && /usr/sbin/nginx -c /etc/nginx/nginx.conf && tail -f /var/log/sdwebui.log;"

# /share/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310/bin/python -u -c  "import time;print(\"start----\");time.sleep(86400*100)" && \

# 注意(写在dockerfile的CMD之前的注释):
# 1. 注意命令中不能有 (当最后一条命令还没有启动起来, nginx访问返回http请求信息的服务)----会导致最后一条命令无法启动 
#     当云函数启动后，只有在访问云函数期间，cpu才不会被冻结。所以当第一次http请求成功后，cpu被冻结，可能导致其他需要时间的服务无法启动
# 2. 当nignx配置多条转发路径，其中一条命令执行时间比较长(120秒左右)，会导致启动另外的实例，大于一个实例
# 3. 下面的命令必须是幂等的，如果在同一实例重启不要报错 
# 4. 要像云函数不释放，必须是执行dockerfile的最后一个前台服务的请求，即卡住docker的最后一条任务的请求。
#    如果请求的非前台服务的其他服务的请求，虽然端口都是docker暴露端口，但是还是无法保活，云函数会在一段时间后释放
CMD /bin/sh -c 'echo ---------start-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
echo ---------start set env-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
CUDNN_PATH=$(dirname $(/share/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310/bin/python -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)")) && \
TENSORRT_PATH=$(dirname $(/share/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310/bin/python -c "import tensorrt;print(tensorrt.__file__)")) && \
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:$CUDNN_PATH:$TENSORRT_PATH && \
echo ---------start rsync-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
if [ ! -d "/home/stable-diffusion-webui/modules" ]; then rsync -azP --no-perms --no-owner --no-group --exclude "/models" --exclude "/embeddings" --exclude "/scripts" --exclude "/samples" --exclude "/localizations" --exclude "/outputs"  /share/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui/ /home/stable-diffusion-webui; fi && \
echo ---------start ln base-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
if [ ! -d "/home/stable-diffusion-webui/models" ]; then mkdir /home/stable-diffusion-webui/models; fi && \
for dir in Codeformer deepbooru ESRGAN GFPGAN  karlo LDSR SwinIR VAE-approx; do if [ ! -L "/home/stable-diffusion-webui/models/$dir" ]; then ln -s /share/sdwebui_public/versions/sdwebui_env/stable-diffusion-webui/models/$dir  /home/stable-diffusion-webui/models/; fi; done && \
for dir in ControlNet  hypernetworks  Lora  Stable-diffusion  VAE; do if [ ! -L "/home/stable-diffusion-webui/models/$dir" ]; then ln -s /share/sdwebui_public/public/models/$dir  /home/stable-diffusion-webui/models/; fi; done && \
for dir in embeddings  localizations  outputs  samples  scripts; do if [ ! -L "/home/stable-diffusion-webui/$dir" ]; then ln -s /share/sdwebui_public/public/$dir  /home/stable-diffusion-webui/; fi; done && \
echo ---------start ln additional networks-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
rm -rf /home/stable-diffusion-webui/extensions/sd-webui-additional-networks/models/lora/* && \
ln -s /share/sdwebui_public/public/models/Lora  /home/stable-diffusion-webui/extensions/sd-webui-additional-networks/models/lora/ && \
echo ---------start launch other server-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
sleep 5 && \
echo PYTHONUNBUFFERED=$PYTHONUNBUFFERED;echo PROJECT_ENV=$PROJECT_ENV && \
echo "yx test 1111">/var/log/sdwebui.log && \
cd /home && \
nohup /share/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310/bin/python -u -m uvicorn fastapi_main:app --port 9966 >fastapi_main.log 2>&1 & sleep 5 && \
/usr/sbin/nginx -c /etc/nginx/nginx.conf && \
echo ---------start launch entry server-------$(date +"%Y-%m-%d %H:%M:%S")--------------- && \
cd /home/stable-diffusion-webui && \
/share/sdwebui_public/versions/sdwebui_env/miniconda3/envs/sd_python310/bin/python -u launch.py --port 9965 --listen --xformers --medvram --api 2>&1 | tee /var/log/sdwebui.log && \
echo ---------end-------'