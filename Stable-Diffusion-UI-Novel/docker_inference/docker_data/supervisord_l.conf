[unix_http_server]
file=/var/run/supervisor.sock   ; (the path to the socket file)
chmod=0700                       ; sockef file mode (default 0700)

[supervisord]
logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
childlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

# [include]
# files = /etc/supervisor/conf.d/*.conf

[program:sdwebui]
command=bash -c "sleep 1 &&  /root/miniconda3/envs/sd_python310/bin/python  -u launch.py --port 7860 --listen --xformers"
directory=/root/stable-diffusion-webui
environment=PROJECT_ENV=prod
user=root
redirect_stderr=true
autostart=true
autorestart=true  # 保证进程出问题会自动重启
startsecs=4
stdout_logfile=/var/log/sdwebui.log
stopsignal=TERM


[program:looptask]
# command=bash -c "sleep 30 &&  /root/miniconda3/envs/sd_python310/bin/python loopscript.py"
command=bash -c 'if [[ ! -f "loopscripts/loopscript.py" ]]; then sleep 10 && echo "no loopscript"; else cd loopscripts&&/root/miniconda3/envs/sd_python310/bin/python -u loopscript.py; fi'
directory=/root
environment=PROJECT_ENV=prod
user=root
redirect_stderr=true
autostart=true
autorestart=true  # 保证进程出问题会自动重启--循环执行脚本,在脚本里面sleep即可
startsecs=4
startretries=10000000000
interval=1  #重试和重启的间隔时间
stdout_logfile=/var/log/loopscript.log
stopsignal=TERM
